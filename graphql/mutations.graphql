mutation InsertGridMutation(
  $gridObjects: [grid_insert_input!]!
  $labResultsObjects: [lab_result_insert_input!]!
) {
  insert_grid(objects: $gridObjects) {
    affected_rows
  }
  insert_lab_result(objects: $labResultsObjects) {
    affected_rows
  }
}

mutation InsertApplicationMutation($application: [application_insert_input!]!) {
  insert_application(objects: $application) {
    affected_rows
  }
}

mutation UpdateLabResultPositiveMutation(
  $gridId: uuid!
  $column: Int!
  $row: Int!
  $positive: Boolean!
) {
  update_lab_result(
    _set: {positive: $positive}
    where: {
      referenced_in_grid_id: {_eq: $gridId}
      _and: {column: {_eq: $column}, _and: {row: {_eq: $row}}}
    }
  ) {
    affected_rows
  }
}

mutation UpdateLabResultSampleCodeMutation(
  $gridId: uuid!
  $column: Int!
  $row: Int!
  $sampleCode: String
  $cellStatus: String
) {
  update_lab_result(
    _set: {sample_code: $sampleCode, cell_status: $cellStatus}
    where: {
      referenced_in_grid_id: {_eq: $gridId}
      _and: {column: {_eq: $column}, _and: {row: {_eq: $row}}}
    }
  ) {
    affected_rows
  }
}

mutation UpdateApplicationMutation($id: uuid!, $changes: application_set_input!) {
  update_application(where: {id: {_eq: $id}}, _set: $changes) {
    affected_rows
  }
}

mutation UpdateGridMutation($id: uuid!, $changes: grid_set_input!) {
  update_grid(where: {id: {_eq: $id}}, _set: $changes) {
    returning {
      created_at
      finished
      id
      sample_arrival_date
      sample_taken_date
      test_finished_date
      test_initiation_date
      title
      updated_at
    }
  }
}

mutation DeleteGridMutation($id: uuid!) {
  delete_grid(where: {id: {_eq: $id}}) {
    affected_rows
  }
}
